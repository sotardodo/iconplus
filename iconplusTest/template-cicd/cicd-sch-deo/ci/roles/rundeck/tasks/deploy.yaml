- name: Get current directory
  shell: pwd
  register: current_workdir
  connection: local

- name: Get bome directory
  shell: echo $HOME
  register: home_workdir
  connection: local

- name: Assign to variable
  set_fact:
    cwd: "{{ current_workdir.stdout }}"
  connection: local

- name: Assign to variable
  set_fact:
    homedir: "{{ home_workdir.stdout }}"
  connection: local
  
- name: include variable
  include_vars:
    file: "./vars/rundeck.yaml"
    name: rundeck
  connection: local

- name: Temp config and secret location
  set_fact:
    tempLocation: "{{ homedir }}/.ddb-pipeline-rundeck/{{ rundeck.project_name }}-{{ envDeployment }}/{{ rundeck.project_name }}-{{ envDeployment }}/"
  connection: local

- name: render jobs definition
  template:
    src: definition.yaml
    dest: $HOME/.ddb-pipeline-rundeck/{{ rundeck.project_name }}-{{ envDeployment }}/{{ rundeck.project_name }}-{{ envDeployment }}/{{ item.name }}.yaml
  with_items: "{{ rundeck.jobs }}"
  connection: local

- name: Check if project exists
  uri:
    url: "{{ project.rundeck.host }}/api/{{ project.rundeck.apiVersion }}/project/{{ rundeck.project_name }}-{{ envDeployment }}"
    method: GET
    headers:
      X-Rundeck-Auth-Token: "{{ project.rundeck.rundeck_token }}"
      Accept: application/json
    return_content: yes
    status_code: 200, 201, 404
  failed_when: "project_exist.status not in [200,201,404]"
  register: project_exist
  connection: local

- name: print
  debug:
    var: project_exist

  



- name: Create project if not exists
  uri:
    url: "{{ project.rundeck.host }}/api/{{ project.rundeck.apiVersion }}/projects"
    method: POST
    body_format: json
    body: |-
      {
        "name": "{{ rundeck.project_name }}-{{ envDeployment }}"
      }
    status_code: 200,201
    headers:
      X-Rundeck-Auth-Token: "{{ project.rundeck.rundeck_token }}"
      Accept: application/json
    return_content: yes
  register: result_createproject
  connection: local
  failed_when: "result_createproject.status not in [200,201,404]"
  when:
    - project_exist.json.errorCode is defined
    - project_exist.json.errorCode == "api.error.item.doesnotexist"

- name: print
  debug:
    var: result_createproject

- name: Create or Update Job
  uri:
    url: "{{ project.rundeck.host }}/api/{{ project.rundeck.apiVersion }}/project/{{ rundeck.project_name }}-{{ envDeployment }}/jobs/import?fileformat=yaml&dupeOption=update"
    method: POST
    body: "{{ lookup('template', '../templates/definition.yaml') }}"
    status_code: 200,201
    headers:
      X-Rundeck-Auth-Token: "{{ project.rundeck.rundeck_token }}"
      Accept: application/json
      Content-Type: application/yaml
    return_content: yes
  with_items: "{{ rundeck.jobs }}"
  register: project_job
  connection: local
  failed_when: "project_job.status not in [200,201,404]"

  when:
    - project_exist.json.errorCode is defined or project_exist.status == 200 or project_exist.status == 201


- name: print
  debug:
    var: project_job




