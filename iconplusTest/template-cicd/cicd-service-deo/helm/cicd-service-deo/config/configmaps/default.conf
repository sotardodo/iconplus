##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

add_header X-Frame-Options SAMEORIGIN;
add_header X-Content-Type-Options nosniff;
# add_header Content-Security-Policy 'default-src \'self\' \'unsafe-inline\' https://google.com https://fonts.googleapis.com/ https://fonts.gstatic.com/ https://www.googletagmanager.com/ https://www.google.com/ https://www.google.com https://www.gstatic.com https://www.google.com https://service-kjt.id/ https://dev-tagihan.stroberi.id/ https://dev-tagihan-internal.stroberi.id/ https://tagihan.stroberi.id/;style-src \'self\' \'unsafe-inline\' https://fonts.googleapis.com/ https://fonts.gstatic.com/; object-src;';
add_header Referrer-Policy 'no-referrer';
add_header Feature-Policy 'geolocation \'none\'';
add_header X-XSS-Protection '1; mode=block';
add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
add_header Expect-CT 'max-age=60, report-uri="{{ project.virtualservice.hosts[0] }}"';
# add_header Public-Key-Pins '{% for pin in item.vars.KeyPin.pins %}pin-sha256="{{ pin }}";{% endfor %} max-age={{ item.vars.KeyPin.maxAge }}; includeSubDomains';

add_header Expires 0;
add_header X-Permitted-Cross-Domain-Policies 'none';

server {
	listen 80 default_server;
	# listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html/public;

	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm index.nginx-debian.html;

	server_name _;

	location /healthz {
		access_log off;
        return 200 "healthy\n";

	}

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index.php?$query_string;	
	}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ \.php$ {
		include fastcgi_params;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
		fastcgi_pass 127.0.0.1:9000;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		include fastcgi_params;
		fastcgi_buffers 256 4k;
		fastcgi_buffer_size 256k;

		fastcgi_read_timeout 700;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}

	location ~ /\.git {
		deny all;
	}

  location ~ /build {
		deny all;
	}

	location ~ /ansible {
		deny all;
	}

  location ~ /Dockerfile {
		deny all;
	}

  location ~ /Jenkinsfile {
		deny all;
	}

	error_page 404 403 =301 /;
	
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
