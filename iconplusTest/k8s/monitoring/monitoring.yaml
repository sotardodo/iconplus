# ===========================================
# 1️⃣ Namespace
# ===========================================
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
# ===========================================
# 2️⃣ Prometheus ConfigMap (scrape config)
# ===========================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 10s

    scrape_configs:
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace]
            action: keep
            regex: devops

      - job_name: 'kubernetes-cadvisor'
        kubernetes_sd_configs:
          - role: node
        metrics_path: /metrics/cadvisor
        scheme: https
        tls_config:
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
---
# ===========================================
# 3️⃣ Prometheus Deployment + Service
# ===========================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--storage.tsdb.retention.time=2d"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config
              mountPath: /etc/prometheus
            - name: prometheus-data
              mountPath: /prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  type: ClusterIP
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
---
# ===========================================
# 4️⃣ ServiceAccount untuk Prometheus
# ===========================================
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
---
# ===========================================
# 5️⃣ Grafana Datasource ConfigMap
# ===========================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasource
  namespace: monitoring
  labels:
    grafana_datasource: "1"
data:
  prometheus-datasource.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus.monitoring.svc.cluster.local:9090
        isDefault: true
---
# ===========================================
# 6️⃣ Grafana Dashboard ConfigMap (namespace devops)
# ===========================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-devops
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
data:
  devops-dashboard.json: |
    {
      "id": null,
      "uid": "devops-ns-monitoring",
      "title": "DevOps Namespace Monitoring",
      "tags": ["k8s", "namespace", "devops"],
      "timezone": "browser",
      "schemaVersion": 36,
      "version": 1,
      "panels": [
        {
          "type": "timeseries",
          "title": "CPU Usage (per Pod)",
          "datasource": "Prometheus",
          "targets": [
            {
              "expr": "sum(rate(container_cpu_usage_seconds_total{namespace='devops'}[5m])) by (pod)",
              "legendFormat": "{{pod}}"
            }
          ]
        },
        {
          "type": "timeseries",
          "title": "Memory Usage (per Pod)",
          "datasource": "Prometheus",
          "targets": [
            {
              "expr": "sum(container_memory_usage_bytes{namespace='devops'}) by (pod)",
              "legendFormat": "{{pod}}"
            }
          ]
        },
        {
          "type": "stat",
          "title": "Pod Count",
          "datasource": "Prometheus",
          "targets": [
            {
              "expr": "count(kube_pod_info{namespace='devops'})",
              "legendFormat": "Pod Count"
            }
          ]
        }
      ]
    }
---
# ===========================================
# 7️⃣ Grafana Deployment + Service
# ===========================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-sc-dashboard
          image: quay.io/kiwigrid/k8s-sidecar:1.15.0
          env:
            - name: LABEL
              value: grafana_dashboard
            - name: FOLDER
              value: /var/lib/grafana/dashboards
          volumeMounts:
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards
        - name: grafana-sc-datasource
          image: quay.io/kiwigrid/k8s-sidecar:1.15.0
          env:
            - name: LABEL
              value: grafana_datasource
            - name: FOLDER
              value: /etc/grafana/provisioning/datasources
          volumeMounts:
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
      volumes:
        - name: grafana-storage
          emptyDir: {}
        - name: dashboards
          emptyDir: {}
        - name: datasources
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  type: ClusterIP
  selector:
    app: grafana
  ports:
    - port: 3000
      targetPort: 3000
---
# ===========================================
# 8️⃣ RBAC (read metrics from Kubernetes)
# ===========================================
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/metrics
      - pods
      - services
      - endpoints
      - namespaces
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: monitoring
