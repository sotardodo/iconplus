# =========================================================
# ‚öôÔ∏è PROMETHEUS CONFIGMAP
# =========================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: devops
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.*)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: (.+):(?:\d+);(\d+)
            replacement: $1:$2
            target_label: __address__
---
# =========================================================
# üß† PROMETHEUS DEPLOYMENT + SERVICE (NodePort)
# =========================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:v2.53.0
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
      volumes:
        - name: prometheus-config-volume
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: devops
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
      nodePort: 30090
---
# =========================================================
# üìä GRAFANA DEPLOYMENT + SERVICE (NodePort)
# =========================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:11.2.0
          ports:
            - containerPort: 3001
          env:
            - name: GF_SECURITY_ADMIN_USER
              value: admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: admin
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
      volumes:
        - name: grafana-storage
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: devops
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
    - port: 3001
      targetPort: 3001
      nodePort: 30091
---
# =========================================================
# üß± NODE EXPORTER (DaemonSet)
# =========================================================
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: devops
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        prometheus.io/path: "/metrics"
    spec:
      hostPID: true
      hostNetwork: true
      containers:
        - name: node-exporter
          image: prom/node-exporter:v1.8.2
          ports:
            - containerPort: 9100
          securityContext:
            privileged: true
          resources:
            limits:
              cpu: "100m"
              memory: "128Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: node-exporter-service
  namespace: devops
spec:
  type: ClusterIP
  selector:
    app: node-exporter
  ports:
    - port: 9100
      targetPort: 9100
---
# =========================================================
# üß© KUBE STATE METRICS
# =========================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kube-state-metrics
  template:
    metadata:
      labels:
        app: kube-state-metrics
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: kube-state-metrics
          image: quay.io/coreos/kube-state-metrics:v2.10.0
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: kube-state-metrics-service
  namespace: devops
spec:
  selector:
    app: kube-state-metrics
  ports:
    - port: 8080
      targetPort: 8080