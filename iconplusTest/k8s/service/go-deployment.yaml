apiVersion: apps/v1
kind: Deployment
metadata:
  name: goapi
  namespace: devops
spec:
  replicas: 1
  selector:
    matchLabels:
      app: goapi
  template:
    metadata:
      labels:
        app: goapi
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: goapi
          image: sotar12/go:latest
          ports:
            - name: http-goapi
              containerPort: 8080
          env:
            - name: DB_HOST
              value: mysql-service          # ðŸ”— host MySQL di namespace devops
            - name: DB_PORT
              value: "3306"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DATABASE
          readinessProbe:
            httpGet:
              path: /metrics
              port: http-goapi
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: http-goapi
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: goapi-service
  namespace: devops
  labels:
    app: goapi
spec:
  type: ClusterIP
  selector:
    app: goapi
  ports:
    - name: http-goapi
      port: 8080
      targetPort: http-goapi
